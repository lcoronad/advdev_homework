// Jenkinsfile for MLBParks
// Set the tag for the development image: version + build number
def devTag      = "0.0-0"
// Set the tag for the production image: version
def prodTag     = "0.0"
podTemplate(
  label: "skopeo-pod",
  cloud: "openshift",
  inheritFrom: "maven",
  containers: [
    containerTemplate(
      name: "jnlp",
      image: "docker-registry.default.svc:5000/${GUID}-jenkins/jenkins-slave-appdev",
      resourceRequestMemory: "1Gi",
      resourceLimitMemory: "2Gi"
    )
  ]
) {
  node('skopeo-pod') {
    echo "GUID: ${GUID}"
    echo "CLUSTER: ${CLUSTER}"

    // Your Pipeline Code goes here. Make sure to use the ${GUID} and ${CLUSTER} parameters where appropriate
    // You need to build the application in directory `MLBParks`.
    // Also copy "../nexus_settings.xml" to your build directory
    // and replace 'GUID' in the file with your ${GUID} to point to >your< Nexus instance
    // Checkout Source Code
    stage('Checkout Source') {
     
	  checkout scm
	
          sh "pwd"

          dir("MLBParks"){
	     sh "pwd"
	     def pom = 'pom.xml'
             def version = getVersionFromPom(pom)
             // TBD: Set the tag for the development image: version + build number.
             // Example: def devTag  = "0.0-0"
             devTag  = "${version}-" + currentBuild.number
             // TBD: Set the tag for the production image: version
             // Example: def prodTag = "0.0"
             prodTag = "${version}"
	  }
	  echo "Devtag: ${devTag}"       	
    }
   //end of the checout stage
   stage('Build App') {
     dir("MLBParks"){ 
       echo "Building version ${devTag}"
       sh "mvn -s ../nexus_settings.xml clean package -DskipTests=true"
       echo "Building complete version ${devTag}"
     }
   }
  //End of the build step
  stage('Test App') {
     dir("MLBParks"){
       echo "Running Unit Tests"
       parallel {
         stage('Unit Tests') {
	   echo "Running Unit Tests"
	   sh "mvn -s ../nexus_settings.xml test"
       	   step([$class: 'JUnitResultArchiver', testResults: '**/target/surefire-reports/TEST-*.xml', allowEmptyResults: true])
	 }
	 stage("Code Coverage Tests"){
	   echo "Running Code Analysis"	
	 }
       }      
       echo "End of the test stage"
     }
   }
  //End of the test stage
  }
}

// Convenience Functions to read variables from the pom.xml
// Do not change anything below this line.
def getVersionFromPom(pom) {
  def matcher = readFile(pom) =~ '<version>(.+)</version>'
  matcher ? matcher[0][1] : null
}
def getGroupIdFromPom(pom) {
  def matcher = readFile(pom) =~ '<groupId>(.+)</groupId>'
  matcher ? matcher[0][1] : null
}
def getArtifactIdFromPom(pom) {
  def matcher = readFile(pom) =~ '<artifactId>(.+)</artifactId>'
  matcher ? matcher[0][1] : null
}
