apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: mongodb-replicated
parameters:
- name: MONGODB_USER
  description: Username for the mongo DB.
  displayName: Username for the mongo DB
  from: user[A-Z0-9]{3}          
  generate: expression           
  required: true
- name: MONGODB_PASSWORD
  description: Mongo DB Connection Password.
  displayName: Mongo DB Connection Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression                  
  required: true
- name: MONGODB_ADMIN_PASSWORD
  description: Mongo Admin DB Connection Password.
  displayName: Mongo Admin DB Connection Password
  from: '[a-zA-Z0-9]{16}'
  generate: expression                  
  required: true
- name: MONGODB_DATABASE
  description: Name of the Mongo database to create.
  displayName: Name of the Mongo database to create            
  required: true
  value: mongodb 
- name: MONGODB_REPLICA_NAME
  description: Name of the Mongo database replica.
  displayName: Name of the Mongo database replica            
  required: true
  value: rs0
- name: MONGODB_KEYFILE_VALUE
  description: Mongo Admin DB KeyFile value.
  displayName: Mongo Admin DB KeyFile value
  from: '[0-9]{20}'
  generate: expression                  
  required: true
- name: MONGODB_SERVICE_NAME
  description: Name of the Mongo client and headless service.
  displayName: Name of the Mongo client and headless service            
  required: true
  value: mongodb
objects:
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      name: mongodb
    name: ${MONGODB_SERVICE_NAME}
  spec:
    ports:
    - name: mongodb
      port: 27017
    selector:
      name: mongodb
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      name: mongodb
    name: ${MONGODB_SERVICE_NAME}-internal
  spec:
    clusterIP: None
    ports:
    - name: mongodb
      port: 27017
    selector:
      name: mongodb
- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: mongodb
  spec:
    serviceName: mongodb-internal
    replicas: 3
    selector:
      matchLabels:
        name: mongodb    
    template:
      metadata:
        labels:
          name: mongodb
      spec:
        containers:
        - args:
          - run-mongod-replication
          env:
          - name: MONGODB_DATABASE
            value: ${MONGODB_DATABASE}
          - name: MONGODB_USER
            value: ${MONGODB_USER}
          - name: MONGODB_PASSWORD
            value: ${MONGODB_PASSWORD}
          - name: MONGODB_ADMIN_PASSWORD
            value: ${MONGODB_ADMIN_PASSWORD}
          - name: MONGODB_REPLICA_NAME
            value: ${MONGODB_REPLICA_NAME}
          - name: MONGODB_KEYFILE_VALUE
            value: ${MONGODB_KEYFILE_VALUE}
          - name: MONGODB_SERVICE_NAME
            value: ${MONGODB_SERVICE_NAME}
          image: registry.access.redhat.com/rhscl/mongodb-34-rhel7:latest
          name: mongo-container
          ports:
          - containerPort: 27017
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - stat
              - /tmp/initialized
            failureThreshold: 3
            periodSeconds: 10
            successThreshold: 1
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: mongo-data
    volumeClaimTemplates:
    - metadata:
        labels:
          name: mongodb
        name: mongo-data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 4Gi
